tisefka[, target_ts]
target_ts <- c("QUAL. NEG"      ,    "QUAL. POS")
tisefka[,target_ts]<- abs(tisefka[,target_ts])
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
gemmu
target_ts
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
akka_ukuden
names(akka_ukuden) <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
base_unit <- "1/4 hour"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
base_unit
base_unit
akka_ukuden
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
ukud_asurif[base_unit]
ukud_asurif
base_unit
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
ukud_asurif <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","+30 minute","+15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit]))
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
min(tisefka$date)
tisefka$date <- as.POSIXct(tisefka$date)
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
min(tisefka$date)
max(tisefka$date)
min(tisefka$date)
ukud_asurif <- c("seconds", "minutes", "hours","30 min","15 min" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "7 day", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
dim(tisefka)
base_unit<-"weeks"
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "7 day", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
View(full_dates)
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "week", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
full_dates
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "week", "month", "quarter", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
base_unit <- "seconds"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
base_unit <- "minutes"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dimp(full_dates)
dim(full_dates)
library(SaldaeDataExplorer)
library(ggplot2)
gemu_tisefka <- economics
gemu_tisefka
target_variable <- "pop"
gemu_tisefka%>%dplyr::select(date,!!target_variable)
library(dplyr)
gemu_tisefka%>%dplyr::select(date,!!target_variable)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka
gemu_tisefka%>%dplyr::select(date,!!target_variable)
gemmu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p <- p %>% plotly::config(displaylogo = F)
return(p)
p
?plotly::plot_ly
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "bar", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
o
p
plot_type<-"bar"
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,colors = "orange") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = "orange") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
plotly::I("orange")
base::I("orange")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("lightblue4")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("lightgoldenrod4")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemu_tisefka <- tisefka
gemu_tisefka <- economics
target_variable
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%mutate(increase = sign(!!target_variable))
gemu_tisefka <- economics
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(!!target_variable))
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
gemu_tisefka$pop <- gemu_tisefka$pop * rnorm(nrow(gemu_tisefka),0,2)
gemu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
gemu_tisefka
gemu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka
gemu_tisefka
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka$pop <- gemmu_tisefka$pop * rnorm(nrow(gemmu_tisefka),0,2)
gemmu_tisefka
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~increase,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =increase,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt(gemu_tisefka, id.vars = "date")
gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt(gemmu_tisefka, id.vars = "date")
#----------------------------
gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt( id.vars = "date")
dplyr::pull(gemmu_tisefka,!!target_variable)
status_f <- function(x){
if(sign(x)>0)return("increase")
if(sign(x)<0)return("decrease")
return("stable")
}
sapply(dplyr::pull(gemmu_tisefka,!!target_variable),status_f)
status <- sapply(dplyr::pull(gemmu_tisefka,!!target_variable),status_f)
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(status = status)
gemmu_tisefka
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
status
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("green","grey","blue")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("orange","grey","green")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("orange","grey","seagreen")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
?htmlwidgets::JS
?jsonlite::toJSON
library(dplyr)
library(ggplot2)
relevant_variables <- colnames(tisefka)
relevant_variables <- colnames(economics)[-1]
tisefka <- economics
tisefka <- tisefka[, numeric_variables, drop = F]
numeric_variables <- colnames(economics)[-1]
tisefka <- tisefka[, numeric_variables, drop = F]
tisefka_density <- apply(tisefka, 2, function(x) stats::density(na.omit(x))$y)
relevant_variables <- c("variables", "outliers_cnt")
DF <- tisefka_report$outliers[, relevant_variables]
DF <- cbind(DF, ukud_tilisa_f(tisefka = tisefka,date_vector = date_vector))
DF_stat <- tisefka_report$beschreibung[, c("n", "na", "mean", "sd")]
DF <- DF%>%dplyr::bind_cols(DF_stat)
DF
date_vector
date_vector  <- economics$date
ukud_tilisa_f(tisefka = tisefka,date_vector = date_vector)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
ukud_tilisa_f(tisefka = tisefka,date_vector = date_vector)
library(SaldaeDataExplorer)
library(readr)
retail_use_case <- read_csv("~/Saldae_Analytics/Tisefka/retail_use_case.csv")
View(retail_use_case)
detect_date_auto(retail_use_case$InvoiceDate)
library(dplyr)
detect_date_auto(retail_use_case$InvoiceDate)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
anomaly_tisefka2
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
SaldaeAnalyticsDashboard::run_app()
library("dplyr")
SaldaeAnalyticsDashboard::run_app()
library(SaldaeDataExplorer)
SaldaeAnalyticsDashboard::run_app()
tisefka2
?stats::density
library(SaldaeDataExplorer)
View(SaldaeDataExplorer::sbed_tisefka)
library(SaldaeDataExplorer)
library(readr)
micro_economics <- read_csv("~/Training_materials/data_source/micro_economics.csv")
View(micro_economics)
time_vect <- micro_economics$Date
time_vect <- tail(time_vect, 2000)
time_jump <- round(abs(diff(as.POSIXct(time_vect))), 0)
time_unit <- attributes(time_jump)$units
time_unit
as.POSIXct(time_vect)
as.Date(micro_economics$Date,"%d/%m/%y")
micro_economics <- micro_economics%>%mutate(Date = as.Date(micro_economics$Date,"%d/%m/%y"))
library(dplyr)
micro_economics <- micro_economics%>%mutate(Date = as.Date(micro_economics$Date,"%d/%m/%y"))
micro_economics%>%readr::write_csv("../../micro_economics.csv")
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
SaldaeAnalyticsDashboard::run_app()
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
SaldaeAnalyticsDashboard::run_app()
SaldaeAnalyticsDashboard::run_app()
